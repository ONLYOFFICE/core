#ifndef HWPTAG_H
#define HWPTAG_H

namespace HWP
{

#define ADD_HWP_TAG(name, index) name = 0x010 + index

enum EHWPTag
{
	ADD_HWP_TAG(null, -1),

	ADD_HWP_TAG(HWPTAG_DOCUMENT_PROPERTIES, 0),
	ADD_HWP_TAG(HWPTAG_ID_MAPPINGS, 1),
	ADD_HWP_TAG(HWPTAG_BIN_DATA, 2),
	ADD_HWP_TAG(HWPTAG_FACE_NAME, 3),
	ADD_HWP_TAG(HWPTAG_BORDER_FILL, 4),
	ADD_HWP_TAG(HWPTAG_CHAR_SHAPE, 5),
	ADD_HWP_TAG(HWPTAG_TAB_DEF, 6),
	ADD_HWP_TAG(HWPTAG_NUMBERING, 7),
	ADD_HWP_TAG(HWPTAG_BULLET, 8),
	ADD_HWP_TAG(HWPTAG_PARA_SHAPE, 9),
	ADD_HWP_TAG(HWPTAG_STYLE, 10),
	ADD_HWP_TAG(HWPTAG_DOC_DATA, 11),
	ADD_HWP_TAG(HWPTAG_DISTRIBUTE_DOC_DATA, 12),
	ADD_HWP_TAG(HWPTAG_COMPATIBLE_DOCUMENT, 13),
	ADD_HWP_TAG(HWPTAG_LAYOUT_COMPATIBILITY, 14),
	ADD_HWP_TAG(HWPTAG_TRACKCHANGE, 15),

	ADD_HWP_TAG(HWPTAG_PARA_HEADER, 50),
	ADD_HWP_TAG(HWPTAG_PARA_TEXT, 51),
	ADD_HWP_TAG(HWPTAG_PARA_CHAR_SHAPE, 52),
	ADD_HWP_TAG(HWPTAG_PARA_LINE_SEG, 53),
	ADD_HWP_TAG(HWPTAG_PARA_RANGE_TAG, 54),
	ADD_HWP_TAG(HWPTAG_CTRL_HEADER, 55),
	ADD_HWP_TAG(HWPTAG_LIST_HEADER, 56),
	ADD_HWP_TAG(HWPTAG_PAGE_DEF, 57),
	ADD_HWP_TAG(HWPTAG_FOOTNOTE_SHAPE, 58),
	ADD_HWP_TAG(HWPTAG_PAGE_BORDER_FILL, 59),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT, 60),
	ADD_HWP_TAG(HWPTAG_TABLE, 61),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_LINE, 62),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_RECTANGLE, 63),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_ELLIPSE, 64),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_ARC, 65),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_POLYGON, 66),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_CURVE, 67),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_OLE, 68),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_PICTURE, 69),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_CONTAINER, 70),
	ADD_HWP_TAG(HWPTAG_CTRL_DATA, 71),
	ADD_HWP_TAG(HWPTAG_EQEDIT, 72),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_TEXTART, 74),
	ADD_HWP_TAG(HWPTAG_FORM_OBJECT, 75),
	ADD_HWP_TAG(HWPTAG_MEMO_SHAPE, 76),
	ADD_HWP_TAG(HWPTAG_MEMO_LIST, 77),
	ADD_HWP_TAG(HWPTAG_FORBIDDEN_CHAR, 78),
	ADD_HWP_TAG(HWPTAG_CHART_DATA, 79),
	ADD_HWP_TAG(HWPTAG_TRACK_CHANGE, 80),
	ADD_HWP_TAG(HWPTAG_TRACK_CHANGE_AUTHOR, 81),
	ADD_HWP_TAG(HWPTAG_VIDEO_DATA, 82),
	ADD_HWP_TAG(HWPTAG_SHAPE_COMPONENT_UNKNOWN, 99)
};

EHWPTag GetTagFromNum(int nTagNum)
{
	switch (static_cast<EHWPTag>(nTagNum))
	{
		case EHWPTag::HWPTAG_DOCUMENT_PROPERTIES:
		case EHWPTag::HWPTAG_ID_MAPPINGS:
		case EHWPTag::HWPTAG_BIN_DATA:
		case EHWPTag::HWPTAG_FACE_NAME:
		case EHWPTag::HWPTAG_BORDER_FILL:
		case EHWPTag::HWPTAG_CHAR_SHAPE:
		case EHWPTag::HWPTAG_TAB_DEF:
		case EHWPTag::HWPTAG_NUMBERING:
		case EHWPTag::HWPTAG_BULLET:
		case EHWPTag::HWPTAG_PARA_SHAPE:
		case EHWPTag::HWPTAG_STYLE:
		case EHWPTag::HWPTAG_DISTRIBUTE_DOC_DATA:
		case EHWPTag::HWPTAG_COMPATIBLE_DOCUMENT:
		case EHWPTag::HWPTAG_LAYOUT_COMPATIBILITY:
		case EHWPTag::HWPTAG_TRACKCHANGE:
		case EHWPTag::HWPTAG_PARA_HEADER:
		case EHWPTag::HWPTAG_PARA_TEXT:
		case EHWPTag::HWPTAG_PARA_CHAR_SHAPE:
		case EHWPTag::HWPTAG_PARA_LINE_SEG:
		case EHWPTag::HWPTAG_PARA_RANGE_TAG:
		case EHWPTag::HWPTAG_CTRL_HEADER:
		case EHWPTag::HWPTAG_LIST_HEADER:
		case EHWPTag::HWPTAG_PAGE_DEF:
		case EHWPTag::HWPTAG_FOOTNOTE_SHAPE:
		case EHWPTag::HWPTAG_PAGE_BORDER_FILL:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT:
		case EHWPTag::HWPTAG_TABLE:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_LINE:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_RECTANGLE:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_ELLIPSE:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_ARC:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_POLYGON:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_CURVE:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_OLE:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_PICTURE:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_CONTAINER:
		case EHWPTag::HWPTAG_CTRL_DATA:
		case EHWPTag::HWPTAG_EQEDIT:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_TEXTART:
		case EHWPTag::HWPTAG_FORM_OBJECT:
		case EHWPTag::HWPTAG_MEMO_SHAPE:
		case EHWPTag::HWPTAG_MEMO_LIST:
		case EHWPTag::HWPTAG_FORBIDDEN_CHAR:
		case EHWPTag::HWPTAG_CHART_DATA:
		case EHWPTag::HWPTAG_TRACK_CHANGE:
		case EHWPTag::HWPTAG_TRACK_CHANGE_AUTHOR:
		case EHWPTag::HWPTAG_VIDEO_DATA:
		case EHWPTag::HWPTAG_SHAPE_COMPONENT_UNKNOWN:
			return static_cast<EHWPTag>(nTagNum);
		default:
			return EHWPTag::null;
	}
}

}

#endif // HWPTAG_H
