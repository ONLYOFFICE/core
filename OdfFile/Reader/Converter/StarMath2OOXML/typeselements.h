#ifndef TYPESELEMENTS_H
#define TYPESELEMENTS_H
namespace StarMath
{
enum TypeElement{
	Number,
	BinOperator,
	Operator,
	Bracket,
	UnarSign,
	Attribute,
	SpecialSymbol,
	Function,
	TwoArgumentContainer,
	Operation,
	Index,
	Matrix,
};
enum TypeBinOperator
{
	cdot,
	times,
	over,
	plus,
	minus,
	frac,
	div,
	multipl,
	division,
	oplus,
	ominus,
	odot,
	otimes,
	odivide,
	circ,
	wideslash,
	widebslash,
};
enum TypeOperator
{
	lim,
	sum,
};
enum TypeBracket
{
	brace,
	round,
	square,
	ldbracket,
	lbrace,
	langle,
	lceil,
	lfloor,
	lline,
	ldline,
};
enum TypeAttributeTop
{
	noneTop,
	acute,
	breve,
	dot,
	dddot,
	vec,
	tilde,
	check,
	grave,
	circle,
	ddot,
	bar,
	harpoon,
	hat,
	widevec,
	widetilde,
	overline,
	overstrike,
	wideharpoon,
	widehat,
	underline,//top elements
};
enum TypeAttributeColor
{
	noneColor,
	black,
	green,
	aqua,
	yellow,
	lime,
	navy,
	purple,
	teal,
	blue,
	red,
	fuchsia,
	gray,
	maroon,
	olive,
	silver,
	coral,
	midnightblue,
	crimson,
	violet,//color(without rgb and hex)
};
enum TypeSymbol
{
	mline,
	grid,
	dlgrid,
	intersection,
	Union,
	setminus,
	setquoyient,
	subseteq,
	subset,
	supset,
	supseteq,
	nsubset,
	nsupseteq,
	nsupset,
	nsubseteq,
	in,
	notin,
	owns,
	approx,
	sim,
	simeq,
	equiv,
	prop,
	parallel,
	ortho,
	divides,
	ndivides,
	toward,
	transl,
	transr,
	def,
	equals,
	notequals,
	learrow,
	learrowequals,
	leslant,
	riarrow,
	riarrowequals,
	geslant,
	dllearrow,
	dlriarrow,
	prec,
	succ,
	preccurlyeq,
	succcurlyeq,
	precsim,
	succsim,
	nprec,
	nsucc,
	dlarrow,
	dlrarrow,
	drarrow,
};
enum TypeFunction
{
	abs,
	fact,
	sqrt,
	nroot,//nroot?
	sin,
	cos,
	tan,
	cot,
	sinh,
	cosh,
	tanh,
	coth,
	arcsin,
	arccos,
	arctan,
	arccot,
	arsinh,
	arcosh,
	artanh,
	arcoth,
	ln,
	exp,
	log,
};
enum TypeIndex
{
	upper,
	lower,
	lsup,
	lsub,
	csup,
	csub,
};
enum TypeMatrix
{
	binom,
	stack,
	matrix,
};
}
#endif // TYPESELEMENTS_H
